/***
 * ??  ???? (MAKE???????ALL_BUILD?????Task-window????????)
 * ??:
 * 1-???:   GLFW???GLAD?
 * 2-??:     ?????????????????????
 */

/* #include <iostream>
#include "glad/glad.h"
#include "GLFW/glfw3.h" */

#include <glad/glad.h>
#include <GLFW/glfw3.h>
#include <iostream>

void framebuffer_size_callback(GLFWwindow *window, int width, int height);

// ?????
int screen_width = 1280;
int screen_height = 720;

int main()
{
  // ???GLFW
  glfwInit();                                    // ???GLFW
  glfwWindowHint(GLFW_CONTEXT_VERSION_MAJOR, 3); // OpenGL???3.3?????????3
  glfwWindowHint(GLFW_CONTEXT_VERSION_MINOR, 3);
  glfwWindowHint(GLFW_OPENGL_PROFILE, GLFW_OPENGL_CORE_PROFILE); // ??????(???????)
  glfwWindowHint(GLFW_OPENGL_FORWARD_COMPAT, GL_TRUE);           // ??????Mac OS X????????
  glfwWindowHint(GLFW_RESIZABLE, false);                         // ????????

  // ????(????????)
  // auto window = glfwCreateWindow(screen_width, screen_height, "window", nullptr, nullptr);
  GLFWwindow *window = glfwCreateWindow(screen_width, screen_height, "window", nullptr, nullptr);
  if (window == NULL)
  { // ???????????Failed to Create OpenGL Context
    std::cout << "Failed to Create OpenGL Context" << std::endl;
    glfwTerminate();
    return -1;
  }
  glfwMakeContextCurrent(window); // ???????????????????

  // ???GLAD???OpenGL?????????
  if (!gladLoadGLLoader((GLADloadproc)glfwGetProcAddress))
  {
    std::cout << "Failed to initialize GLAD" << std::endl;
    return -1;
  }

  // ????????(?????????????????????????)
  glViewport(0, 0, screen_width, screen_height);

  // ???????????
  glfwSetFramebufferSizeCallback(window, framebuffer_size_callback);

  // ????
  while (!glfwWindowShouldClose(window))
  {

    // ??????
    glClearColor(0.0f, 0.34f, 0.57f, 1.0f);
    glClear(GL_COLOR_BUFFER_BIT);

    // ???????????????(?????????????
    glfwSwapBuffers(window);
    glfwPollEvents();
  }

  // ??????????????
  glfwTerminate();
  return 0;
}

// ???????????????????
void framebuffer_size_callback(GLFWwindow *window, int width, int height)
{
  glViewport(0, 0, width, height);
}